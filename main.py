print("ü§ñ Telegram Bot 24/7 - Render Version!")

import os
import time
import threading
import logging
from flask import Flask
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# ===== –í–ï–ë-–°–ï–†–í–ï–† –î–õ–Ø –ü–ò–ù–ì–û–í =====
app = Flask(__name__)

@app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω! –í—Ä–µ–º—è: " + time.strftime('%Y-%m-%d %H:%M:%S')

@app.route('/ping')
def ping():
    print(f"‚úÖ –ü–∏–Ω–≥ –ø–æ–ª—É—á–µ–Ω: {time.strftime('%H:%M:%S')}")
    return "pong"

@app.route('/health')
def health():
    return "healthy"

def run_web():
    print("üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app.run(host='0.0.0.0', port=5000)

# ===== –ù–ê–°–¢–†–û–ô–ö–ò =====
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8442410256:AAEHxB066xzt6BYos99zb7ZKnykvPyWPyv4")
ADMIN_CHAT_ID = 5846819259
CHANNEL_USERNAME = "@eggssssi115"

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# ===== –§–£–ù–ö–¶–ò–ò –ë–û–¢–ê =====
async def check_subscription(user_id, context):
    try:
        chat_member = await context.bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return chat_member.status in ['creator', 'administrator', 'member', 'restricted']
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    print(f"üë§ /start –æ—Ç {user.first_name}")

    is_subscribed = await check_subscription(user.id, context)

    if not is_subscribed:
        await update.message.reply_text(f'‚ùå –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: {CHANNEL_USERNAME}')
        return

    keyboard = [['üì∏ –§–æ—Ç–æ', 'üé• –í–∏–¥–µ–æ', 'üí¨ –í–æ–ø—Ä–æ—Å']]
    await update.message.reply_text(
        f'–ü—Ä–∏–≤–µ—Ç {user.first_name}! ‚úÖ',
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    print(f"üì∏ –§–æ—Ç–æ –æ—Ç {user.first_name}")

    is_subscribed = await check_subscription(user.id, context)
    if not is_subscribed:
        await update.message.reply_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!')
        return

    await update.message.reply_text('‚úÖ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –ü–µ—Ä–µ—Å—ã–ª–∞—é –∞–¥–º–∏–Ω—É...')
    await context.bot.send_message(ADMIN_CHAT_ID, f"üì∏ –§–æ—Ç–æ –æ—Ç {user.first_name} (@{user.username}):")
    await update.message.forward(ADMIN_CHAT_ID)

async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    print(f"üé• –í–∏–¥–µ–æ –æ—Ç {user.first_name}")

    is_subscribed = await check_subscription(user.id, context)
    if not is_subscribed:
        await update.message.reply_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!')
        return

    await update.message.reply_text('‚úÖ –í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ! –ü–µ—Ä–µ—Å—ã–ª–∞—é –∞–¥–º–∏–Ω—É...')
    await context.bot.send_message(ADMIN_CHAT_ID, f"üé• –í–∏–¥–µ–æ –æ—Ç {user.first_name} (@{user.username}):")
    await update.message.forward(ADMIN_CHAT_ID)

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text
    print(f"üí¨ –¢–µ–∫—Å—Ç –æ—Ç {user.first_name}: {text}")

    is_subscribed = await check_subscription(user.id, context)
    if not is_subscribed:
        await update.message.reply_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!')
        return

    if text == 'üì∏ –§–æ—Ç–æ':
        await update.message.reply_text('–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ üì∑')
    elif text == 'üé• –í–∏–¥–µ–æ':
        await update.message.reply_text('–û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ üé¨')
    elif text == 'üí¨ –í–æ–ø—Ä–æ—Å':
        await update.message.reply_text('–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å ‚úçÔ∏è')
    else:
        await update.message.reply_text('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü–µ—Ä–µ—Å—ã–ª–∞—é –∞–¥–º–∏–Ω—É...')
        await context.bot.send_message(ADMIN_CHAT_ID, f"üí¨ –í–æ–ø—Ä–æ—Å –æ—Ç {user.first_name} (@{user.username}):\n{text}")
        await update.message.forward(ADMIN_CHAT_ID)
# ===== –ó–ê–ü–£–°–ö –ë–û–¢–ê =====
def main():
    print("üîÑ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ —Ñ–æ–Ω–µ
    web_thread = threading.Thread(target=run_web, daemon=True)
    web_thread.start()
    time.sleep(2)
    print("‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000")

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    application = (
        Application.builder()
        .token(BOT_TOKEN)
        .build()
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    application.add_handler(MessageHandler(filters.VIDEO, handle_video))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ 24/7!")
    print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–æ—Ç–∞ –≤ Telegram")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
